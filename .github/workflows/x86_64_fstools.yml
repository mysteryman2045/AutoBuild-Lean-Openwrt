#=================================================
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: eSirPlayground
# Youtube Channel: https://goo.gl/fvkdwm 
#=================================================

name: Build_x86_64_fstools

on: 
  release:
    types: [published]

  push:
    branches: 
      - master
    paths:
      - 'x86_64_fstools.config'

  #schedule:
  #  - cron: 0 8 * * 5
  
  #watch:
  #  types: [started]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        docker rmi `docker images -q`
        echo "Deleting files, please wait ..."
        sudo rm -rf \
          /usr/share/dotnet \
          /etc/mysql \
          /etc/php
        sudo -E apt-get -y purge \
          azure-cli \
          ghc* \
          zulu* \
          hhvm \
          llvm* \
          firefox \
          google* \
          dotnet* \
          powershell \
          openjdk* \
          mysql* \
          php*
        sudo -E apt-get update
        sudo -E apt-get -y install install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync
        sudo -E apt-get -y autoremove --purge
        sudo -E apt-get clean
        
    - name: Clone source code
      env: 
        REPO_URL: https://github.com/coolsnowwolf/lede
        REPO_BRANCH: master
      run: |
        git clone --depth 1 $REPO_URL -b $REPO_BRANCH openwrt
        
    - name: Clone fstools
      env: 
        REPO_URL: https://github.com/mysteryman2045/fstools
        REPO_BRANCH: master
      run: |
        git clone $REPO_URL
        cp -f fstools/fstools/Makefile openwrt/package/system/fstools/
        
    - name: Clone AdGuardHome
      env: 
        REPO_URL: https://github.com/rufengsuixing/luci-app-adguardhome
        REPO_BRANCH: master
      run: |
        git clone $REPO_URL
        cp -rf luci-app-adguardhome/ openwrt/package/lean/
        
    - name: Update & Install feeds
      working-directory: ./openwrt
      run: |
        sed -i '11s/#//' feeds.conf.default
        sed -i '/helloworld/a\src-git infinityfreedom https://github.com/xiaoqingfengATGH/luci-theme-infinityfreedom\
        src-git dockerman https://github.com/lisaac/luci-app-dockerman' feeds.conf.default
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        ./scripts/feeds install -a
    #- name: Import external feeds
    #  working-directory: ./openwrt
    #  run: |
    #    git clone https://github.com/Lienol/openwrt-package package/lienol
    #    git clone "your_github_link" package/"your_folder_name"      

    - name: Configuration Customization - Build_x86_64_fstools
      env:
        CONFIG_FILE: 'x86_64_fstools.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        
        cd openwrt && make defconfig
        
    - name: Download package
      working-directory: ./openwrt
      run: |
        make download -j$(nproc)
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;
    - name: Build firmware
      working-directory: ./openwrt
      run: |
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s
        
    - name: copy fstools---Build firmware
      working-directory: ./openwrt
      run: |
        cp -rf ../fstools/fstools-2020-07-11-53453438/* build_dir/target-x86_64_musl/fstools-2020-07-11-53453438/
        echo -e "$(nproc) thread build."
        make -j$(nproc) V=s    
        
    - name : Upload artifact
      uses: actions/upload-artifact@master
      with:
        name: OpenWrt_x86_64${{ env.FILE_DATE }}
        path: openwrt/bin/targets
